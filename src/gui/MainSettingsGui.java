/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import control.SettingsControler;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTextField;
import persistenceCommons.BundleManager;
import persistenceCommons.SettingsManager;

/**
 *
 * @author serguei
 */
public class MainSettingsGui extends javax.swing.JPanel {

    /**
     * Creates new form MainSettingsGui
     */
    
    private static final BundleManager LABELS = SettingsManager.getInstance().getBundleManager();
    
    private final SettingsControler settingsControler;
    private SettingsManager settingsManager;
    
    public MainSettingsGui() {
    //    this.settingsMap = settingsMap;
      this.settingsManager = SettingsManager.getInstance();
      settingsControler = new SettingsControler(this);
      initComponents();
      openSaveDir.addActionListener(settingsControler);
      saveDirButton.addActionListener(settingsControler);
      languageComboBox.addActionListener(settingsControler);
      autoLoadButton.addActionListener(settingsControler);
      autoLoadActionButton.addActionListener(settingsControler);
      overEliminCheckBox.addActionListener(settingsControler);
      myEmailTextField.addActionListener(settingsControler);
      sendConfirmPopUpCheckBox.addActionListener(settingsControler);
      sendOrderRequestCheckBox.addActionListener(settingsControler);
      
      initFilterRadiobutton();
      initSortOrdersRadiobutton();      
      allFiltroRadioButton.addActionListener(settingsControler);
      ownFiltroRadioButton.addActionListener(settingsControler);
      alphabeticOrderButton.addActionListener(settingsControler);
      sequenceRadioButton.addActionListener(settingsControler);
      splitSizeSpinner.addChangeListener(settingsControler);
              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        filtroButtonGroup = new javax.swing.ButtonGroup();
        ordersSortButtonGroup = new javax.swing.ButtonGroup();
        gamePanel = new javax.swing.JPanel();
        languageLabel = new javax.swing.JLabel();
        languageComboBox = new javax.swing.JComboBox<>();
        saveDirLabel = new javax.swing.JLabel();
        autoLoadDirLabel = new javax.swing.JLabel();
        autoLoadActionLabel = new javax.swing.JLabel();
        loadDirLabel = new javax.swing.JLabel();
        overEliminCheckBox = new javax.swing.JCheckBox();
        openSaveDir = new javax.swing.JButton();
        saveDirTextField = new javax.swing.JTextField();
        loadDirTextField = new javax.swing.JTextField();
        saveDirButton = new javax.swing.JButton();
        autoLoadTextField = new javax.swing.JTextField();
        autoLoadButton = new javax.swing.JButton();
        autoLoadActionTextField = new javax.swing.JTextField();
        autoLoadActionButton = new javax.swing.JButton();
        playerPanel = new javax.swing.JPanel();
        myEmailLabel = new javax.swing.JLabel();
        serverSmtpLabel = new javax.swing.JLabel();
        serverPortLabel = new javax.swing.JLabel();
        serverUserLabel = new javax.swing.JLabel();
        serverPassLabel = new javax.swing.JLabel();
        sendConfirmPopUpCheckBox = new javax.swing.JCheckBox();
        sendOrderRequestCheckBox = new javax.swing.JCheckBox();
        serverSMTPTextField = new javax.swing.JTextField();
        serverUserTextField = new javax.swing.JTextField();
        myEmailTextField = new javax.swing.JTextField();
        serverPortTextField = new javax.swing.JFormattedTextField();
        serverPasswordField = new javax.swing.JPasswordField();
        displayPanel = new javax.swing.JPanel();
        filtroLabel = new javax.swing.JLabel();
        allFiltroRadioButton = new javax.swing.JRadioButton();
        ownFiltroRadioButton = new javax.swing.JRadioButton();
        splitSizeLabel = new javax.swing.JLabel();
        minimizeWindowCheckBox = new javax.swing.JCheckBox();
        splitSizeSpinner = new javax.swing.JSpinner();
        tableColumnCheckBox = new javax.swing.JCheckBox();
        copyActionsPopUpCheckBox = new javax.swing.JCheckBox();
        copyOrdersCheckBox = new javax.swing.JCheckBox();
        keepPopUpCheckBox = new javax.swing.JCheckBox();
        autoMoveCheckBox = new javax.swing.JCheckBox();
        maximizeWindowCheckBox = new javax.swing.JCheckBox();
        sortOrdersLabel = new javax.swing.JLabel();
        alphabeticOrderButton = new javax.swing.JRadioButton();
        sequenceRadioButton = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jCheckBox11 = new javax.swing.JCheckBox();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jCheckBox12 = new javax.swing.JCheckBox();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("labels"); // NOI18N
        gamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("SETTINGS.TITLE.GAME"))); // NOI18N

        languageLabel.setText(bundle.getString("SETTINGS.LABEL.LANGUAGE")); // NOI18N

        languageComboBox.setModel(getLanguageModel());
        languageComboBox.setActionCommand("languageCombo");

        saveDirLabel.setText(bundle.getString("SETTINGS.GAME.SAVEDIR")); // NOI18N

        autoLoadDirLabel.setText(bundle.getString("SETTINGS.GAME.AUTOLOAD")); // NOI18N

        autoLoadActionLabel.setText(bundle.getString("SETTINGS.GAME.AUTOLOADACTION")); // NOI18N

        loadDirLabel.setText(bundle.getString("SETTINGS.GAME.LOADDIR")); // NOI18N

        overEliminCheckBox.setSelected(isOverrideSelected());
        overEliminCheckBox.setText(bundle.getString("SETTINGS.GAME.OVERRIDE")); // NOI18N
        overEliminCheckBox.setToolTipText(bundle.getString("SETTINGS.GAME.OVERRIDE.TOOLTIP")); // NOI18N
        overEliminCheckBox.setActionCommand("overrideAction");

        openSaveDir.setText("...");
        openSaveDir.setActionCommand("fSaves");

        saveDirTextField.setEditable(false);
        saveDirTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        saveDirTextField.setText(settingsManager.getConfig("saveDir"));

        loadDirTextField.setEditable(false);
        loadDirTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        loadDirTextField.setText(settingsManager.getConfig("loadDir")
        );

        saveDirButton.setText("...");
        saveDirButton.setActionCommand("fLoad");

        autoLoadTextField.setEditable(false);
        autoLoadTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        autoLoadTextField.setText(settingsManager.getConfig("autoLoad"));

        autoLoadButton.setText("...");
        autoLoadButton.setActionCommand("fLoadAuto");

        autoLoadActionTextField.setEditable(false);
        autoLoadActionTextField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        autoLoadActionTextField.setText(settingsManager.getConfig("autoLoadActions"));

        autoLoadActionButton.setText("...");
        autoLoadActionButton.setActionCommand("fLoadAutoAction");

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addComponent(saveDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(gamePanelLayout.createSequentialGroup()
                        .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(overEliminCheckBox)
                            .addGroup(gamePanelLayout.createSequentialGroup()
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(saveDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(gamePanelLayout.createSequentialGroup()
                                            .addComponent(loadDirLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(loadDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(gamePanelLayout.createSequentialGroup()
                                            .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(autoLoadActionLabel)
                                                .addComponent(autoLoadDirLabel))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                                            .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(autoLoadActionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(autoLoadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(autoLoadActionButton)
                                    .addComponent(autoLoadButton)
                                    .addComponent(saveDirButton)
                                    .addComponent(openSaveDir))))
                        .addContainerGap(59, Short.MAX_VALUE))))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageLabel)
                    .addComponent(languageComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveDirLabel)
                    .addComponent(saveDirTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(openSaveDir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadDirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadDirLabel)
                    .addComponent(saveDirButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoLoadButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(autoLoadDirLabel)
                        .addComponent(autoLoadTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(autoLoadActionButton)
                    .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(autoLoadActionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(autoLoadActionLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(overEliminCheckBox)
                .addGap(0, 47, Short.MAX_VALUE))
        );

        playerPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Player settings"));

        myEmailLabel.setText(bundle.getString("SETTINGS.PLAYER.EMAIL")); // NOI18N

        serverSmtpLabel.setText(bundle.getString("SETTINGS.PLAYER.SMTP.SERVER")); // NOI18N

        serverPortLabel.setText(bundle.getString("SETTINGS.PLAYER.SMTP.PORT")); // NOI18N

        serverUserLabel.setText(bundle.getString("SETTINGS.PLAYER.SMTP.USER")); // NOI18N

        serverPassLabel.setText(bundle.getString("SETTINGS.PLAYER.SMTP.PASS")); // NOI18N

        sendConfirmPopUpCheckBox.setSelected(isConfirmOrderSelected());
        sendConfirmPopUpCheckBox.setText(bundle.getString("SETTINGS.PLAYER.SENDORDERCONFIRM")); // NOI18N
        sendConfirmPopUpCheckBox.setToolTipText(bundle.getString("SETTINGS.PLAYER.SENDORDERCONFIRM.TOOLTIP")); // NOI18N
        sendConfirmPopUpCheckBox.setActionCommand("showPopUp");

        sendOrderRequestCheckBox.setSelected(isRecieveConfirmSelected());
        sendOrderRequestCheckBox.setText(bundle.getString("SETTINGS.PLAYER.SENDORDERRECEIPT")); // NOI18N
        sendOrderRequestCheckBox.setToolTipText(bundle.getString("SETTINGS.PLAYER.SENDORDERRECEIPT.TOOLTIP")); // NOI18N
        sendOrderRequestCheckBox.setActionCommand("recieveConfirm");

        serverSMTPTextField.setText(settingsManager.getConfig("mail.smtp.server"));
        serverSMTPTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverSMTPTextFieldFocusLost(evt);
            }
        });

        serverUserTextField.setText(settingsManager.getConfig("mail.smtp.user"));
        serverUserTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverUserTextFieldFocusLost(evt);
            }
        });

        myEmailTextField.setText(settingsManager.getConfig("MyEmail"));
        myEmailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                myEmailTextFieldFocusLost(evt);
            }
        });

        serverPortTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        serverPortTextField.setText(settingsManager.getConfig("mail.smpt.port"));
        serverPortTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverPortTextFieldFocusLost(evt);
            }
        });

        serverPasswordField.setText(settingsManager.getConfig("mail.smtp.passwd"));
        serverPasswordField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                serverPasswordFieldFocusLost(evt);
            }
        });

        javax.swing.GroupLayout playerPanelLayout = new javax.swing.GroupLayout(playerPanel);
        playerPanel.setLayout(playerPanelLayout);
        playerPanelLayout.setHorizontalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, playerPanelLayout.createSequentialGroup()
                        .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sendOrderRequestCheckBox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sendConfirmPopUpCheckBox, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, playerPanelLayout.createSequentialGroup()
                                .addComponent(myEmailLabel)
                                .addGap(50, 50, 50)
                                .addComponent(myEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, playerPanelLayout.createSequentialGroup()
                        .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serverPassLabel)
                            .addComponent(serverUserLabel)
                            .addComponent(serverPortLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(serverSmtpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serverSMTPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(serverUserTextField)
                                .addComponent(serverPortTextField)
                                .addComponent(serverPasswordField, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        playerPanelLayout.setVerticalGroup(
            playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myEmailLabel)
                    .addComponent(myEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendConfirmPopUpCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sendOrderRequestCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverSmtpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(serverSMTPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverPortLabel)
                    .addComponent(serverPortTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(serverUserLabel)
                    .addComponent(serverUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverPassLabel)
                    .addComponent(serverPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        displayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("SETTINGS.TITLE.DISPLAY"))); // NOI18N

        filtroLabel.setText(bundle.getString("SETTINGS.DISPLAY.FILTER")); // NOI18N

        filtroButtonGroup.add(allFiltroRadioButton);
        allFiltroRadioButton.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.ALL")); // NOI18N
        allFiltroRadioButton.setActionCommand("allFilter");

        filtroButtonGroup.add(ownFiltroRadioButton);
        ownFiltroRadioButton.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.OWN")); // NOI18N
        ownFiltroRadioButton.setActionCommand("ownFilter");

        splitSizeLabel.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.SPLITSIZE")); // NOI18N
        splitSizeLabel.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.SPLITSIZE.TOOLTIP")); // NOI18N

        minimizeWindowCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.MINIMIZEMAP")); // NOI18N
        minimizeWindowCheckBox.setEnabled(false);

        splitSizeSpinner.setModel(new javax.swing.SpinnerNumberModel(0, null, null, 5));
        splitSizeSpinner.setValue(Integer.parseInt(settingsManager.getConfig("splitSize", "0")));

        tableColumnCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.COLUMNADJUST")); // NOI18N
        tableColumnCheckBox.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.COLUMNADJUST.TOOLTIP")); // NOI18N

        copyActionsPopUpCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.COPYACTIONSPOPUP")); // NOI18N
        copyActionsPopUpCheckBox.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.COPYACTIONSPOPUP.TOOLTIP")); // NOI18N

        copyOrdersCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.COPYORDERSPOPUP")); // NOI18N
        copyOrdersCheckBox.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.COPYORDERSPOPUP.TOOLTIP")); // NOI18N

        keepPopUpCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.KEEPPOPUP")); // NOI18N
        keepPopUpCheckBox.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.KEEPPOPUP.TOOLTIP")); // NOI18N

        autoMoveCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.MOVENEXT")); // NOI18N
        autoMoveCheckBox.setToolTipText(bundle.getString("SETTINGS.DISPLAY.FILTER.MOVENEXT.TOOLTIP")); // NOI18N

        maximizeWindowCheckBox.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.MAXIMIZEWIN")); // NOI18N

        sortOrdersLabel.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.SORTORDERS")); // NOI18N

        ordersSortButtonGroup.add(alphabeticOrderButton);
        alphabeticOrderButton.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.SORTORDERS.ALPHABETIC")); // NOI18N
        alphabeticOrderButton.setActionCommand("alphaSort");

        ordersSortButtonGroup.add(sequenceRadioButton);
        sequenceRadioButton.setText(bundle.getString("SETTINGS.DISPLAY.FILTER.SORTORDERS.SEQUENCE")); // NOI18N
        sequenceRadioButton.setActionCommand("seqSort");

        javax.swing.GroupLayout displayPanelLayout = new javax.swing.GroupLayout(displayPanel);
        displayPanel.setLayout(displayPanelLayout);
        displayPanelLayout.setHorizontalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(maximizeWindowCheckBox)
                    .addComponent(tableColumnCheckBox)
                    .addComponent(copyOrdersCheckBox)
                    .addComponent(autoMoveCheckBox)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayPanelLayout.createSequentialGroup()
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sortOrdersLabel)
                            .addComponent(splitSizeLabel)
                            .addComponent(filtroLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(allFiltroRadioButton)
                            .addComponent(splitSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(alphabeticOrderButton))))
                .addGap(18, 18, 18)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(keepPopUpCheckBox)
                    .addComponent(copyActionsPopUpCheckBox)
                    .addComponent(minimizeWindowCheckBox)
                    .addComponent(ownFiltroRadioButton)
                    .addComponent(sequenceRadioButton))
                .addContainerGap(89, Short.MAX_VALUE))
        );
        displayPanelLayout.setVerticalGroup(
            displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filtroLabel)
                    .addComponent(allFiltroRadioButton)
                    .addComponent(ownFiltroRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortOrdersLabel)
                    .addComponent(alphabeticOrderButton)
                    .addComponent(sequenceRadioButton))
                .addGap(9, 9, 9)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(splitSizeLabel)
                    .addComponent(splitSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maximizeWindowCheckBox)
                    .addComponent(minimizeWindowCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tableColumnCheckBox)
                    .addComponent(copyActionsPopUpCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(displayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(copyOrdersCheckBox)
                    .addComponent(keepPopUpCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(autoMoveCheckBox)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("map_settings"));

        jLabel24.setText("HexTagStyle");

        jLabel25.setText("HexTagFrame");

        jLabel26.setText("ShowArmyMovPath");

        jLabel27.setText("MapTiles");

        jLabel28.setText("drawPcPath");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox11.setText("jCheckBox11");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jCheckBox12.setText("jCheckBox12");

        jFormattedTextField1.setText("jFormattedTextField1");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25)
                            .addComponent(jLabel24)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox12)
                            .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox11)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jCheckBox11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jCheckBox12))
                .addGap(58, 58, 58)
                .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(161, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(playerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(551, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(playerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(415, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void myEmailTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_myEmailTextFieldFocusLost
        // TODO add your handling code here:
        String playerEmail = myEmailTextField.getText();
        if (playerEmail != null && !playerEmail.isEmpty()) {
            SettingsManager.getInstance().setConfig("MyEmail", playerEmail);
            }
    }//GEN-LAST:event_myEmailTextFieldFocusLost

    private void serverSMTPTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverSMTPTextFieldFocusLost
        // TODO add your handling code here:
        String serverName = serverSMTPTextField.getText();
        if (serverName != null) {
            SettingsManager.getInstance().setConfig("mail.smtp.server", serverName);
         }
    }//GEN-LAST:event_serverSMTPTextFieldFocusLost

    private void serverPortTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverPortTextFieldFocusLost
        // TODO add your handling code here:
        String port = serverPortTextField.getText();
        if (port != null) {               
            SettingsManager.getInstance().setConfig("mail.smpt.port", port);
         }
    }//GEN-LAST:event_serverPortTextFieldFocusLost

    private void serverUserTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverUserTextFieldFocusLost
        // TODO add your handling code here:
        String user = serverUserTextField.getText();
        if (user != null) {
            SettingsManager.getInstance().setConfig("mail.smpt.user", user);
         }
    }//GEN-LAST:event_serverUserTextFieldFocusLost

    private void serverPasswordFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_serverPasswordFieldFocusLost
        // TODO add your handling code here:
        String pass = new String(serverPasswordField.getPassword());
        SettingsManager.getInstance().setConfig("mail.smtp.passwd", pass);
        
    }//GEN-LAST:event_serverPasswordFieldFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton allFiltroRadioButton;
    private javax.swing.JRadioButton alphabeticOrderButton;
    private javax.swing.JButton autoLoadActionButton;
    private javax.swing.JLabel autoLoadActionLabel;
    private javax.swing.JTextField autoLoadActionTextField;
    private javax.swing.JButton autoLoadButton;
    private javax.swing.JLabel autoLoadDirLabel;
    private javax.swing.JTextField autoLoadTextField;
    private javax.swing.JCheckBox autoMoveCheckBox;
    private javax.swing.JCheckBox copyActionsPopUpCheckBox;
    private javax.swing.JCheckBox copyOrdersCheckBox;
    private javax.swing.JPanel displayPanel;
    private javax.swing.ButtonGroup filtroButtonGroup;
    private javax.swing.JLabel filtroLabel;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JCheckBox keepPopUpCheckBox;
    private javax.swing.JComboBox<ComboItem> languageComboBox;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JLabel loadDirLabel;
    private javax.swing.JTextField loadDirTextField;
    private javax.swing.JCheckBox maximizeWindowCheckBox;
    private javax.swing.JCheckBox minimizeWindowCheckBox;
    private javax.swing.JLabel myEmailLabel;
    private javax.swing.JTextField myEmailTextField;
    private javax.swing.JButton openSaveDir;
    private javax.swing.ButtonGroup ordersSortButtonGroup;
    private javax.swing.JCheckBox overEliminCheckBox;
    private javax.swing.JRadioButton ownFiltroRadioButton;
    private javax.swing.JPanel playerPanel;
    private javax.swing.JButton saveDirButton;
    private javax.swing.JLabel saveDirLabel;
    private javax.swing.JTextField saveDirTextField;
    private javax.swing.JCheckBox sendConfirmPopUpCheckBox;
    private javax.swing.JCheckBox sendOrderRequestCheckBox;
    private javax.swing.JRadioButton sequenceRadioButton;
    private javax.swing.JLabel serverPassLabel;
    private javax.swing.JPasswordField serverPasswordField;
    private javax.swing.JLabel serverPortLabel;
    private javax.swing.JFormattedTextField serverPortTextField;
    private javax.swing.JTextField serverSMTPTextField;
    private javax.swing.JLabel serverSmtpLabel;
    private javax.swing.JLabel serverUserLabel;
    private javax.swing.JTextField serverUserTextField;
    private javax.swing.JLabel sortOrdersLabel;
    private javax.swing.JLabel splitSizeLabel;
    private javax.swing.JSpinner splitSizeSpinner;
    private javax.swing.JCheckBox tableColumnCheckBox;
    // End of variables declaration//GEN-END:variables


    public JTextField getSaveDirTextField() {
        return saveDirTextField;
    }
    
    public JTextField getLoadDirTextField() {
        return loadDirTextField;
    }
    
    public JTextField getAutoLoadActionTextField() {
        return autoLoadActionTextField;
    }
    
    public JTextField getAutoLoadTextField() {
        return autoLoadTextField;
    }
    
    
     
    private boolean isOverrideSelected(){    
        return settingsManager.getConfig("OverrideElimination", "0").equals("1");       
    }

    private boolean isConfirmOrderSelected() {        
        return settingsManager.getConfig("SendOrderConfirmationPopUp","0").equals("1");  
    }
    
    private boolean isRecieveConfirmSelected() {
        return settingsManager.getConfig("SendOrderReceiptRequest", "0").equals("1"); 
    }
    
    private ComboItem[] getLanguageComboModel(){
        
        String languages[] = new String[] {"PT","ES","EN","IT"};
        ComboItem[] combo = new ComboItem[languages.length];
       
        String langLabel = null;
        for (int i = 0; i < languages.length; i++) {
            langLabel = LABELS.getString("SETTINGS.LABEL.LANGUAGE.".concat(languages[i]));
            combo[i] = new ComboItem(languages[i].toLowerCase(), langLabel);            
        }
                    
        return combo;
    }

    private ComboBoxModel getLanguageModel() {
        ComboBoxModel comboBoxModel = new DefaultComboBoxModel(getLanguageComboModel());
        
        String langSelected = settingsManager.getConfig("language", "EN").toUpperCase();
        
        comboBoxModel.setSelectedItem(LABELS.getString("SETTINGS.LABEL.LANGUAGE.".concat(langSelected)));
        
        
        return comboBoxModel;
    }
    
    public class ComboItem {
        private final String value;
        private final String label;
        
        private ComboItem(String value, String label) {
            this.value = value;
            this.label = label;
        }
        
        @Override
        public String toString() {
            return this.label;
        }
        
        public String getValue() {
            return this.value;
        }
    }
    
    private void initFilterRadiobutton() {
        boolean isAll = settingsManager.getConfig("filtro.default", "0").equals("0"); 
        if (isAll) {
            allFiltroRadioButton.setSelected(true);
            ownFiltroRadioButton.setSelected(false);
        } else {
            allFiltroRadioButton.setSelected(false);
            ownFiltroRadioButton.setSelected(true);
        }
    }
    
    private void initSortOrdersRadiobutton() {
        boolean isSorted = settingsManager.getConfig("SortAllCombos", "0").equals("1");         
        if (isSorted) {
            alphabeticOrderButton.setSelected(true);
            sequenceRadioButton.setSelected(false);
        } else {
            alphabeticOrderButton.setSelected(false);
            sequenceRadioButton.setSelected(true);
        }
    }

}
