/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.accessories;

import baseLib.GenericoComboBoxModel;
import baseLib.GenericoComboObject;
import business.converter.ConverterFactory;
import business.facade.CidadeFacade;
import business.facade.LocalFacade;
import control.BattleSimPlatoonCasualtyControlerNew;
import control.BattleSimulatorControlerNew;
import control.support.IBattleSimulator;
import gui.services.ColumnWidthsAdjuster;
import java.util.Hashtable;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableModel;
import model.Cidade;
import model.ExercitoSim;
import model.Local;
import model.Pelotao;
import model.Terreno;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import persistenceCommons.BundleManager;
import persistenceCommons.SettingsManager;

/**
 *
 * @author jmoura
 */
public class BattleCasualtySimulatorNew extends JFrame implements IBattleSimulator {

    private static final Log log = LogFactory.getLog(BattleCasualtySimulatorNew.class);
    private static final BundleManager labels = SettingsManager.getInstance().getBundleManager();
    private final LocalFacade localFacade = new LocalFacade();
    private final CidadeFacade cidadeFacade = new CidadeFacade();
    private final BattleSimulatorControlerNew battleSimControler;
    private final BattleSimPlatoonCasualtyControlerNew platoonControler;

    public BattleCasualtySimulatorNew(Local local) {
        initComponents();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //create controlers
        battleSimControler = new BattleSimulatorControlerNew(this);
        battleSimControler.doChangeTerrain(local.getTerreno());
        platoonControler = new BattleSimPlatoonCasualtyControlerNew(this, local);
        //create and link controlers
        battleSimControler.setCasualtyControler(platoonControler);
        setLocal(local);
        configUI(local);
        /*
        add/edit plattons; add platoon when no army. find platoon by troopType, not rowIndex.
        How to add nation? add to army panel?
        rename components to identify platoon's vs army's easier
        relayout: Move terrain to city box; rename city box to local, adjust title;
        test edge cases, no armies, no city, sea, etc
        run simulation (spit out round by round results)
        add troops/nation/army powers to combar (i.e. first strike)
        add diplomatic relationship to BattleSim
         */
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCity = new javax.swing.JPanel();
        jlLoyalty = new javax.swing.JLabel();
        jlSize = new javax.swing.JLabel();
        jlFortification = new javax.swing.JLabel();
        jlDefense = new javax.swing.JLabel();
        jsLoyalty = new javax.swing.JSlider();
        jsSize = new javax.swing.JSlider();
        jsFortification = new javax.swing.JSlider();
        jpArmies = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtArmyList = new javax.swing.JTable();
        jpArmyEdit = new javax.swing.JPanel();
        jcbTerrain = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jsCommander = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jsMorale = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jsAbonus = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jsDbonus = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        cbTactic = new javax.swing.JComboBox();
        jbNewArmy = new javax.swing.JButton();
        jbRemArmy = new javax.swing.JButton();
        jbCloneArmy = new javax.swing.JButton();
        jpPlatoons = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        comboFiltroTypes = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPlatoonList = new javax.swing.JTable();
        jpPlatoonEdit = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jsQty = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jsTraining = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jsWeapon = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jsArmor = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        cbTroopType = new javax.swing.JComboBox();
        jbNewPlatoon = new javax.swing.JButton();
        jbRemPlatoon = new javax.swing.JButton();
        jbClonePlatoon = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpCity.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.LOCAL.TITLE"))); // NOI18N

        jlLoyalty.setText(labels.getString("LEALDADE")); // NOI18N

        jlSize.setText(labels.getString("TAMANHO")); // NOI18N

        jlFortification.setText(labels.getString("FORTIFICACOES")); // NOI18N

        jlDefense.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlDefense.setText(labels.getString("CIDADE.DEFESA")); // NOI18N

        jsLoyalty.setMajorTickSpacing(10);
        jsLoyalty.setMinimum(1);
        jsLoyalty.setMinorTickSpacing(5);
        jsLoyalty.setPaintTicks(true);
        jsLoyalty.setValue(1);
        jsLoyalty.setName("jsLoyalty"); // NOI18N

        jsSize.setMajorTickSpacing(1);
        jsSize.setMaximum(5);
        jsSize.setPaintLabels(true);
        jsSize.setPaintTicks(true);
        jsSize.setSnapToTicks(true);
        jsSize.setValue(0);
        jsSize.setName("jsSize"); // NOI18N

        jsFortification.setMajorTickSpacing(1);
        jsFortification.setMaximum(5);
        jsFortification.setPaintLabels(true);
        jsFortification.setPaintTicks(true);
        jsFortification.setSnapToTicks(true);
        jsFortification.setValue(0);
        jsFortification.setName("jsFortification"); // NOI18N

        javax.swing.GroupLayout jpCityLayout = new javax.swing.GroupLayout(jpCity);
        jpCity.setLayout(jpCityLayout);
        jpCityLayout.setHorizontalGroup(
            jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jsFortification, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
            .addComponent(jsSize, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jsLoyalty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jpCityLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlDefense, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlFortification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlLoyalty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jpCityLayout.setVerticalGroup(
            jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCityLayout.createSequentialGroup()
                .addComponent(jlDefense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlLoyalty)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsLoyalty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlSize)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlFortification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsFortification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpArmies.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.ARMIES.TITLE"))); // NOI18N

        jScrollPane1.setBorder(null);

        jtArmyList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtArmyList.setName("jtArmyList"); // NOI18N
        jScrollPane1.setViewportView(jtArmyList);

        javax.swing.GroupLayout jpArmiesLayout = new javax.swing.GroupLayout(jpArmies);
        jpArmies.setLayout(jpArmiesLayout);
        jpArmiesLayout.setHorizontalGroup(
            jpArmiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );
        jpArmiesLayout.setVerticalGroup(
            jpArmiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpArmiesLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        jpArmyEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.ARMY.TITLE"))); // NOI18N

        jcbTerrain.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText(labels.getString("COMANDANTE")); // NOI18N

        jsCommander.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 5));
        jsCommander.setName("jsCommander"); // NOI18N

        jLabel2.setText(labels.getString("MORAL")); // NOI18N

        jsMorale.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 10));
        jsMorale.setName("jsMorale"); // NOI18N

        jLabel3.setText(labels.getString("TROPA.ATAQUE.BONUS")); // NOI18N

        jsAbonus.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000000, 1000));
        jsAbonus.setName("jsAbonus"); // NOI18N

        jLabel4.setText(labels.getString("TROPA.DEFESA.BONUS")); // NOI18N

        jsDbonus.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000000, 1000));
        jsDbonus.setName("jsDbonus"); // NOI18N

        jLabel5.setText(labels.getString("TATICA")); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("labels"); // NOI18N
        jbNewArmy.setText(bundle.getString("ADDNEW.ARMY")); // NOI18N
        jbNewArmy.setToolTipText(bundle.getString("ADDNEW.ARMY.HINT")); // NOI18N
        jbNewArmy.setActionCommand("jbNewArmy");
        jbNewArmy.setName("jbNewArmy"); // NOI18N

        jbRemArmy.setText(bundle.getString("REMOVE.ARMY")); // NOI18N
        jbRemArmy.setToolTipText(bundle.getString("REMOVE.ARMY.HINT")); // NOI18N
        jbRemArmy.setActionCommand("jbRemArmy");
        jbRemArmy.setName("jbRemArmy"); // NOI18N

        jbCloneArmy.setText(bundle.getString("CLONE.ARMY")); // NOI18N
        jbCloneArmy.setToolTipText(bundle.getString("CLONE.ARMY.HINT")); // NOI18N
        jbCloneArmy.setActionCommand("jbCloneArmy");
        jbCloneArmy.setName("jbCloneArmy"); // NOI18N

        javax.swing.GroupLayout jpArmyEditLayout = new javax.swing.GroupLayout(jpArmyEdit);
        jpArmyEdit.setLayout(jpArmyEditLayout);
        jpArmyEditLayout.setHorizontalGroup(
            jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpArmyEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbTerrain, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jpArmyEditLayout.createSequentialGroup()
                        .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpArmyEditLayout.createSequentialGroup()
                                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jpArmyEditLayout.createSequentialGroup()
                                .addComponent(jbNewArmy)
                                .addGap(29, 29, 29)))
                        .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpArmyEditLayout.createSequentialGroup()
                                .addComponent(jbCloneArmy)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbRemArmy)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jsMorale)
                            .addComponent(jsCommander)
                            .addComponent(jsAbonus)
                            .addComponent(jsDbonus)
                            .addComponent(cbTactic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jpArmyEditLayout.setVerticalGroup(
            jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpArmyEditLayout.createSequentialGroup()
                .addComponent(jcbTerrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jsCommander, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jsMorale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jsAbonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jsDbonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbTactic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCloneArmy)
                    .addComponent(jbRemArmy)
                    .addComponent(jbNewArmy)))
        );

        jpPlatoons.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("TROOPCASUALTIES.BORDER.TITLE"))); // NOI18N

        jLabel11.setText(labels.getString("LISTAR:")); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(comboFiltroTypes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFiltroTypes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setBorder(null);

        jtPlatoonList.setAutoCreateRowSorter(true);
        jtPlatoonList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nação", "Tamanho", "Nação", "Local", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPlatoonList.setName("jtPlatoonList"); // NOI18N
        jScrollPane3.setViewportView(jtPlatoonList);

        javax.swing.GroupLayout jpPlatoonsLayout = new javax.swing.GroupLayout(jpPlatoons);
        jpPlatoons.setLayout(jpPlatoonsLayout);
        jpPlatoonsLayout.setHorizontalGroup(
            jpPlatoonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jpPlatoonsLayout.setVerticalGroup(
            jpPlatoonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlatoonsLayout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE))
        );

        jpPlatoonEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.PLATOON.TITLE"))); // NOI18N

        jLabel6.setText(labels.getString("QTD")); // NOI18N

        jsQty.setModel(new javax.swing.SpinnerNumberModel(1000, 0, 1000000, 100));
        jsQty.setName("jsQty"); // NOI18N

        jLabel7.setText(labels.getString("TREINO")); // NOI18N

        jsTraining.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsTraining.setName("jsTraining"); // NOI18N

        jLabel8.setText(labels.getString("ARMA")); // NOI18N

        jsWeapon.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsWeapon.setName("jsWeapon"); // NOI18N

        jLabel9.setText(labels.getString("ARMADURA")); // NOI18N

        jsArmor.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsArmor.setName("jsArmor"); // NOI18N

        jLabel10.setText(labels.getString("TIPO")); // NOI18N

        jbNewPlatoon.setText(bundle.getString("ADDNEW.ARMY")); // NOI18N
        jbNewPlatoon.setToolTipText(bundle.getString("ADDNEW.PLATOON.HINT")); // NOI18N
        jbNewPlatoon.setActionCommand("jbNewPlatoon"); // NOI18N
        jbNewPlatoon.setName("jbNewPlatoon"); // NOI18N

        jbRemPlatoon.setText(bundle.getString("REMOVE.ARMY")); // NOI18N
        jbRemPlatoon.setToolTipText(bundle.getString("REMOVE.PLATOON.HINT")); // NOI18N
        jbRemPlatoon.setActionCommand("jbRemPlatoon");
        jbRemPlatoon.setName("jbRemPlatoon"); // NOI18N

        jbClonePlatoon.setText(bundle.getString("CLONE.ARMY")); // NOI18N
        jbClonePlatoon.setToolTipText(bundle.getString("CLONE.PLATOON.HINT")); // NOI18N
        jbClonePlatoon.setActionCommand("jbClonePlatoon");
        jbClonePlatoon.setName("jbClonePlatoon"); // NOI18N

        javax.swing.GroupLayout jpPlatoonEditLayout = new javax.swing.GroupLayout(jpPlatoonEdit);
        jpPlatoonEdit.setLayout(jpPlatoonEditLayout);
        jpPlatoonEditLayout.setHorizontalGroup(
            jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                        .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                        .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbNewPlatoon)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                        .addGap(10, 10, 10)))
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbTroopType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jsQty)
                    .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                        .addComponent(jbClonePlatoon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemPlatoon)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jsTraining)
                    .addComponent(jsWeapon)
                    .addComponent(jsArmor))
                .addContainerGap())
        );
        jpPlatoonEditLayout.setVerticalGroup(
            jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbTroopType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jsQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jsTraining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jsWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jsArmor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbClonePlatoon)
                    .addComponent(jbRemPlatoon)
                    .addComponent(jbNewPlatoon)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpArmies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpPlatoons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpArmyEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpPlatoonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpPlatoonEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpArmyEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpCity, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpArmies, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpPlatoons, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbTactic;
    private javax.swing.JComboBox cbTroopType;
    private javax.swing.JComboBox comboFiltroTypes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbCloneArmy;
    private javax.swing.JButton jbClonePlatoon;
    private javax.swing.JButton jbNewArmy;
    private javax.swing.JButton jbNewPlatoon;
    private javax.swing.JButton jbRemArmy;
    private javax.swing.JButton jbRemPlatoon;
    private javax.swing.JComboBox jcbTerrain;
    private javax.swing.JLabel jlDefense;
    private javax.swing.JLabel jlFortification;
    private javax.swing.JLabel jlLoyalty;
    private javax.swing.JLabel jlSize;
    private javax.swing.JPanel jpArmies;
    private javax.swing.JPanel jpArmyEdit;
    private javax.swing.JPanel jpCity;
    private javax.swing.JPanel jpPlatoonEdit;
    private javax.swing.JPanel jpPlatoons;
    private javax.swing.JSpinner jsAbonus;
    private javax.swing.JSpinner jsArmor;
    private javax.swing.JSpinner jsCommander;
    private javax.swing.JSpinner jsDbonus;
    private javax.swing.JSlider jsFortification;
    private javax.swing.JSlider jsLoyalty;
    private javax.swing.JSpinner jsMorale;
    private javax.swing.JSpinner jsQty;
    private javax.swing.JSlider jsSize;
    private javax.swing.JSpinner jsTraining;
    private javax.swing.JSpinner jsWeapon;
    private javax.swing.JTable jtArmyList;
    private javax.swing.JTable jtPlatoonList;
    // End of variables declaration//GEN-END:variables

    private void setLocal(Local local) {
        final String title = String.format(labels.getString("BATTLECAUSUALITYSIM.TITLE"), local.getCoordenadas());
        setTitle(title);
        setCidade(local);
        setArmy(local);
    }

    /**
     * set initial values from city
     *
     * @param local
     */
    private void setCidade(Local local) {
        if (!localFacade.isCidade(local)) {
            return;
        }
        final Cidade city = localFacade.getCidade(local);
        jsLoyalty.setValue(cidadeFacade.getLealdade(city));
        jsSize.setValue(cidadeFacade.getTamanho(city));
        jsFortification.setValue(cidadeFacade.getFortificacao(city));

        jpCity.setBorder(javax.swing.BorderFactory.createTitledBorder(
                String.format("%s: %s", labels.getString("BATTLESIM.CITY.TITLE"),
                        cidadeFacade.getNomeCoordenada(city))));
        updateCityLabels();
    }

    @Override
    public void updateCityLabels() {
        jlLoyalty.setText(String.format("%s: %s",
                labels.getString("LEALDADE"),
                jsLoyalty.getValue()));

        jlSize.setText(String.format("%s: %s", labels.getString("TAMANHO"), cidadeFacade.getTamanhoNome(jsSize.getValue())));

        jlFortification.setText(String.format("%s: %s", labels.getString("FORTIFICACOES"),
                cidadeFacade.getFortificacaoNome(jsFortification.getValue())));

        jlDefense.setText(String.format("%s: %s", labels.getString("CIDADE.DEFESA"),
                cidadeFacade.getDefesa(jsSize.getValue(), jsFortification.getValue(), jsLoyalty.getValue())));
    }

    private void configCitySliders() {
        jsLoyalty.addChangeListener(battleSimControler);
        jsSize.addChangeListener(battleSimControler);
        jsFortification.addChangeListener(battleSimControler);

        Hashtable sizeLabels = new Hashtable();
        for (int ii = jsSize.getMinimum(); ii < jsSize.getMaximum(); ii++) {
            sizeLabels.put(ii, new JLabel(cidadeFacade.getTamanhoNome(ii)));
        }
        jsSize.setLabelTable(sizeLabels);
        jsSize.setPaintLabels(true);

        Hashtable fortLabels = new Hashtable();
        for (int ii = jsFortification.getMinimum(); ii < jsFortification.getMaximum(); ii++) {
            fortLabels.put(ii, new JLabel(cidadeFacade.getFortificacaoNome(ii)));
        }
        jsFortification.setLabelTable(fortLabels);
        jsFortification.setPaintLabels(true);
    }

    private void setArmy(Local local) {
        if (localFacade.getExercitos(local).isEmpty()) {
            return;
        }
        final TableModel model = battleSimControler.getArmyListTableModel(localFacade.getExercitos(local).values());
        this.setArmyModel(model, 0);
    }

    private void configUI(Local local) {

        comboFiltroTypes.setActionCommand("comboFiltro");
        comboFiltroTypes.setModel(battleSimControler.listFiltroTypes());

        //adiciona listeners
        comboFiltroTypes.addActionListener(battleSimControler);

        configCitySliders();
        cbTactic.setActionCommand("cbTactic");
        cbTactic.setModel(battleSimControler.listFiltroTactic());
        cbTactic.addActionListener(battleSimControler);
        cbTroopType.setActionCommand("cbTroopType");
        cbTroopType.setModel(platoonControler.listTipoTropas());
        cbTroopType.addActionListener(platoonControler);

        jsCommander.addChangeListener(battleSimControler);
        jsMorale.addChangeListener(battleSimControler);
        jsAbonus.addChangeListener(battleSimControler);
        jsDbonus.addChangeListener(battleSimControler);
        jcbTerrain.setActionCommand("jcbTerrain");
        jbNewArmy.addActionListener(battleSimControler);
        jbCloneArmy.addActionListener(battleSimControler);
        jbRemArmy.addActionListener(battleSimControler);
        jbNewPlatoon.addActionListener(platoonControler);
        jbClonePlatoon.addActionListener(platoonControler);
        jbRemPlatoon.addActionListener(platoonControler);

        final GenericoComboBoxModel terrenoComboModel = battleSimControler.getTerrenoComboModel();
        jcbTerrain.setModel(terrenoComboModel);
        final int index = terrenoComboModel.getIndexByDisplay(local.getTerreno().getComboDisplay());
        this.jcbTerrain.setSelectedIndex(index);
        this.jcbTerrain.setMaximumRowCount(terrenoComboModel.getSize());
        jcbTerrain.addActionListener(battleSimControler);

        jtArmyList.setAutoCreateColumnsFromModel(true);
        jtArmyList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jtArmyList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtArmyList.getSelectionModel().addListSelectionListener(battleSimControler);

        jtPlatoonList.setAutoCreateColumnsFromModel(true);
        jtPlatoonList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jtPlatoonList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtPlatoonList.getSelectionModel().addListSelectionListener(platoonControler);
        //select first army to load titles
        this.jtArmyList.setRowSelectionInterval(0, 0);
    }

    @Override
    public void setCasualtyBorder(ExercitoSim exercito, Terreno terrain) {
        //config border
        final String title;
        if (exercito != null) {
            title = String.format(labels.getString("TROOPCASUALTIES.COMMANDER.TACTIC"), exercito.getNome(), terrain.getNome(), getFiltroTactic().getComboDisplay());
        } else {
            title = labels.getString("TROOPCASUALTIES.BORDER.TITLE");
        }
        jpPlatoons.setBorder(javax.swing.BorderFactory.createTitledBorder(title));
    }

    @Override
    public final void setArmyModel(TableModel model, int selected) {
        this.jtArmyList.setModel(model);
        doAdjustCols(jtArmyList);
//        this.jtArmyList.getSelectionModel().setSelectionInterval(0, 0);
        try {
            this.jtArmyList.setRowSelectionInterval(selected, selected);
        } catch (IllegalArgumentException ex) {
            this.jtArmyList.setRowSelectionInterval(0, 0);
        }
    }

    public final void setPlatoonModel(TableModel model, int selected) {
        this.jtPlatoonList.setModel(model);
        doAdjustCols(jtPlatoonList);
//        this.jtPlatoonList.getSelectionModel().setSelectionInterval(0, 0);
        try {
            this.jtPlatoonList.setRowSelectionInterval(selected, selected);
        } catch (IllegalArgumentException ex) {
            this.jtPlatoonList.setRowSelectionInterval(0, 0);
        }
    }

    public final String getFiltroTypes() {
        GenericoComboObject elem = (GenericoComboObject) comboFiltroTypes.getSelectedItem();
        return elem.getComboId();
    }

    protected void doAdjustCols(JTable jtList) {
        final ColumnWidthsAdjuster cwa = new ColumnWidthsAdjuster();
        cwa.calcColumnWidths(jtList);
    }

    @Override
    public JTable getListaExercitos() {
        return jtArmyList;
    }

    public JTable getListaPlatoon() {
        return jtPlatoonList;
    }

    public GenericoComboObject getFiltroTactic() {
        return (GenericoComboObject) cbTactic.getSelectedItem();
    }

    public GenericoComboObject getTipoTropaPlatoon() {
        return (GenericoComboObject) cbTroopType.getSelectedItem();
    }

    public void doRefreshArmy() {
        battleSimControler.doRefreshArmy();
    }

    @Override
    public void updateArmy(ExercitoSim exercito) {
        jsCommander.removeChangeListener(battleSimControler);
        jsCommander.setValue(exercito.getPericiaComandante());
        jsCommander.addChangeListener(battleSimControler);

        jsMorale.removeChangeListener(battleSimControler);
        jsMorale.setValue(exercito.getMoral());
        jsMorale.addChangeListener(battleSimControler);

        jsAbonus.removeChangeListener(battleSimControler);
        jsAbonus.setValue(exercito.getBonusAttack());
        jsAbonus.addChangeListener(battleSimControler);

        jsDbonus.removeChangeListener(battleSimControler);
        jsDbonus.setValue(exercito.getBonusDefense());
        jsDbonus.addChangeListener(battleSimControler);

        cbTactic.removeActionListener(battleSimControler);
        final GenericoComboBoxModel model = (GenericoComboBoxModel) cbTactic.getModel();
        cbTactic.setSelectedIndex(model.getIndexById(ConverterFactory.taticaToCodigo(exercito.getTatica())));
        cbTactic.addActionListener(battleSimControler);
    }

    public void updatePlatoonPanel(Pelotao platoon) {
        jsQty.removeChangeListener(platoonControler);
        jsQty.setValue(platoon.getQtd());
        jsQty.addChangeListener(platoonControler);

        jsTraining.removeChangeListener(platoonControler);
        jsTraining.setValue(platoon.getTreino());
        jsTraining.addChangeListener(platoonControler);

        jsWeapon.removeChangeListener(platoonControler);
        jsWeapon.setValue(platoon.getModAtaque());
        jsWeapon.addChangeListener(platoonControler);

        jsArmor.removeChangeListener(platoonControler);
        jsArmor.setValue(platoon.getModDefesa());
        jsArmor.addChangeListener(platoonControler);

        cbTroopType.removeActionListener(platoonControler);
        final GenericoComboBoxModel model = (GenericoComboBoxModel) cbTroopType.getModel();
        cbTroopType.setSelectedIndex(model.getIndexById(platoon.getTipoTropa().getComboId()));
        cbTroopType.addActionListener(platoonControler);
    }
}
