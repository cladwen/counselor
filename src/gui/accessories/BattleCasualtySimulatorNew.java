/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.accessories;

import baseLib.GenericoComboBoxModel;
import baseLib.GenericoComboObject;
import business.converter.ConverterFactory;
import business.facade.CidadeFacade;
import business.facade.LocalFacade;
import control.BattleSimPlatoonCasualtyControlerNew;
import control.BattleSimulatorControlerNew;
import control.support.IBattleSimulator;
import gui.services.ColumnWidthsAdjuster;
import java.util.Hashtable;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.TableModel;
import model.Cidade;
import model.ExercitoSim;
import model.Local;
import model.Pelotao;
import model.Terreno;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import persistenceCommons.BundleManager;
import persistenceCommons.SettingsManager;

/**
 *
 * @author jmoura
 */
public class BattleCasualtySimulatorNew extends JFrame implements IBattleSimulator {

    private static final Log log = LogFactory.getLog(BattleCasualtySimulatorNew.class);
    private static final BundleManager labels = SettingsManager.getInstance().getBundleManager();
    private final LocalFacade localFacade = new LocalFacade();
    private final CidadeFacade cidadeFacade = new CidadeFacade();
    private final BattleSimulatorControlerNew battleSimControler;
    private final BattleSimPlatoonCasualtyControlerNew platoonControler;

    public BattleCasualtySimulatorNew(Local local) {
        initComponents();

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        //create controlers
        battleSimControler = new BattleSimulatorControlerNew(this);
        battleSimControler.doChangeTerrain(local.getTerreno());
        platoonControler = new BattleSimPlatoonCasualtyControlerNew(this, local);
        //create and link controlers
        battleSimControler.setCasualtyControler(platoonControler);
        setLocal(local);
        configUI(local);
        /*
        re-layout: Move terrain to city box; rename city box to local, adjust title;
        better messages https://stackoverflow.com/questions/3240415/how-to-create-a-notification-in-swing  https://stackoverflow.com/questions/23841518/how-to-pop-up-a-text-boxor-tooltip-via-script-in-java
        test edge cases, no armies, no city, sea, etc
        FIXME: fix all fixmes
        run simulation (split out round by round results)
        add troops/nation/army powers to combar (i.e. first strike)
        add diplomatic relationship to BattleSim
         */
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpCity = new javax.swing.JPanel();
        jlLoyalty = new javax.swing.JLabel();
        jlSize = new javax.swing.JLabel();
        jlFortification = new javax.swing.JLabel();
        jlDefense = new javax.swing.JLabel();
        jsCityLoyalty = new javax.swing.JSlider();
        jsCitySize = new javax.swing.JSlider();
        jsCityFortification = new javax.swing.JSlider();
        jcbTerrain = new javax.swing.JComboBox();
        jpArmyList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtArmyList = new javax.swing.JTable();
        jpArmyEdit = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jsArmyCommander = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jsArmyMorale = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jsArmyAbonus = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        jsArmyDbonus = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        cbArmyTactic = new javax.swing.JComboBox();
        jbNewArmy = new javax.swing.JButton();
        jbRemArmy = new javax.swing.JButton();
        jbCloneArmy = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        cbArmyNation = new javax.swing.JComboBox();
        jpPlatoonList = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPlatoonList = new javax.swing.JTable();
        jpPlatoonEdit = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jsPlatoonQty = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        jsPlatoonTraining = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jsPlatoonWeapon = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jsPlatoonArmor = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        cbPlatoonTroopType = new javax.swing.JComboBox();
        jbNewPlatoon = new javax.swing.JButton();
        jbRemPlatoon = new javax.swing.JButton();
        jbClonePlatoon = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        cbTypeCategory = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jpCity.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.LOCAL.TITLE"))); // NOI18N

        jlLoyalty.setText(labels.getString("LEALDADE")); // NOI18N

        jlSize.setText(labels.getString("TAMANHO")); // NOI18N

        jlFortification.setText(labels.getString("FORTIFICACOES")); // NOI18N

        jlDefense.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jlDefense.setText(labels.getString("CIDADE.DEFESA")); // NOI18N

        jsCityLoyalty.setMajorTickSpacing(20);
        jsCityLoyalty.setMinorTickSpacing(10);
        jsCityLoyalty.setOrientation(javax.swing.JSlider.VERTICAL);
        jsCityLoyalty.setPaintLabels(true);
        jsCityLoyalty.setPaintTicks(true);
        jsCityLoyalty.setValue(100);
        jsCityLoyalty.setName("jsCityLoyalty"); // NOI18N
        jsCityLoyalty.setPreferredSize(new java.awt.Dimension(50, 200));

        jsCitySize.setMajorTickSpacing(1);
        jsCitySize.setMaximum(5);
        jsCitySize.setOrientation(javax.swing.JSlider.VERTICAL);
        jsCitySize.setPaintLabels(true);
        jsCitySize.setSnapToTicks(true);
        jsCitySize.setValue(0);
        jsCitySize.setName("jsCitySize"); // NOI18N
        jsCitySize.setPreferredSize(new java.awt.Dimension(50, 200));

        jsCityFortification.setMajorTickSpacing(1);
        jsCityFortification.setMaximum(5);
        jsCityFortification.setOrientation(javax.swing.JSlider.VERTICAL);
        jsCityFortification.setPaintLabels(true);
        jsCityFortification.setSnapToTicks(true);
        jsCityFortification.setValue(0);
        jsCityFortification.setName("jsCityFortification"); // NOI18N
        jsCityFortification.setPreferredSize(new java.awt.Dimension(50, 200));

        jcbTerrain.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jpCityLayout = new javax.swing.GroupLayout(jpCity);
        jpCity.setLayout(jpCityLayout);
        jpCityLayout.setHorizontalGroup(
            jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCityLayout.createSequentialGroup()
                .addGroup(jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jcbTerrain, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDefense, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(33, 33, 33))
            .addGroup(jpCityLayout.createSequentialGroup()
                .addComponent(jlLoyalty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jlSize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlFortification, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpCityLayout.createSequentialGroup()
                .addComponent(jsCityLoyalty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsCitySize, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jsCityFortification, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jpCityLayout.setVerticalGroup(
            jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCityLayout.createSequentialGroup()
                .addComponent(jlDefense)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlLoyalty)
                    .addComponent(jlSize)
                    .addComponent(jlFortification))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpCityLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jsCitySize, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jsCityFortification, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jsCityLoyalty, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbTerrain, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jpArmyList.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.ARMIES.TITLE"))); // NOI18N

        jScrollPane1.setBorder(null);

        jtArmyList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtArmyList.setName("jtArmyList"); // NOI18N
        jScrollPane1.setViewportView(jtArmyList);

        javax.swing.GroupLayout jpArmyListLayout = new javax.swing.GroupLayout(jpArmyList);
        jpArmyList.setLayout(jpArmyListLayout);
        jpArmyListLayout.setHorizontalGroup(
            jpArmyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jpArmyListLayout.setVerticalGroup(
            jpArmyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
        );

        jpArmyEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.ARMY.TITLE"))); // NOI18N

        jLabel1.setText(labels.getString("COMANDANTE")); // NOI18N

        jsArmyCommander.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 5));
        jsArmyCommander.setName("jsArmyCommander"); // NOI18N

        jLabel2.setText(labels.getString("MORAL")); // NOI18N

        jsArmyMorale.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000, 10));
        jsArmyMorale.setName("jsArmyMorale"); // NOI18N

        jLabel3.setText(labels.getString("TROPA.ATAQUE.BONUS")); // NOI18N

        jsArmyAbonus.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000000, 1000));
        jsArmyAbonus.setName("jsArmyAbonus"); // NOI18N

        jLabel4.setText(labels.getString("TROPA.DEFESA.BONUS")); // NOI18N

        jsArmyDbonus.setModel(new javax.swing.SpinnerNumberModel(0, 0, 1000000, 1000));
        jsArmyDbonus.setName("jsArmyDbonus"); // NOI18N

        jLabel5.setText(labels.getString("TATICA")); // NOI18N

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("labels"); // NOI18N
        jbNewArmy.setText(bundle.getString("ADDNEW.ARMY")); // NOI18N
        jbNewArmy.setToolTipText(bundle.getString("ADDNEW.ARMY.HINT")); // NOI18N
        jbNewArmy.setActionCommand("jbNewArmy");
        jbNewArmy.setName("jbNewArmy"); // NOI18N

        jbRemArmy.setText(bundle.getString("REMOVE.ARMY")); // NOI18N
        jbRemArmy.setToolTipText(bundle.getString("REMOVE.ARMY.HINT")); // NOI18N
        jbRemArmy.setActionCommand("jbRemArmy");
        jbRemArmy.setName("jbRemArmy"); // NOI18N

        jbCloneArmy.setText(bundle.getString("CLONE.ARMY")); // NOI18N
        jbCloneArmy.setToolTipText(bundle.getString("CLONE.ARMY.HINT")); // NOI18N
        jbCloneArmy.setActionCommand("jbCloneArmy");
        jbCloneArmy.setName("jbCloneArmy"); // NOI18N

        jLabel12.setText(labels.getString("NACAO")); // NOI18N

        cbArmyNation.setActionCommand("cbNacao");
        cbArmyNation.setName("cbArmyNation"); // NOI18N

        javax.swing.GroupLayout jpArmyEditLayout = new javax.swing.GroupLayout(jpArmyEdit);
        jpArmyEdit.setLayout(jpArmyEditLayout);
        jpArmyEditLayout.setHorizontalGroup(
            jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpArmyEditLayout.createSequentialGroup()
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cbArmyNation, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jsArmyDbonus, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                    .addComponent(jsArmyAbonus, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsArmyMorale, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbArmyTactic, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jsArmyCommander, javax.swing.GroupLayout.Alignment.LEADING)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpArmyEditLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbNewArmy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCloneArmy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbRemArmy)
                .addContainerGap())
        );
        jpArmyEditLayout.setVerticalGroup(
            jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpArmyEditLayout.createSequentialGroup()
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jsArmyCommander, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jsArmyMorale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jsArmyAbonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jsArmyDbonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(cbArmyNation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbArmyTactic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpArmyEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCloneArmy)
                    .addComponent(jbRemArmy)
                    .addComponent(jbNewArmy)))
        );

        jpPlatoonList.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("TROOPCASUALTIES.BORDER.TITLE"))); // NOI18N

        jScrollPane3.setBorder(null);

        jtPlatoonList.setAutoCreateRowSorter(true);
        jtPlatoonList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nação", "Tamanho", "Nação", "Local", "Title 5"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPlatoonList.setName("jtPlatoonList"); // NOI18N
        jScrollPane3.setViewportView(jtPlatoonList);

        javax.swing.GroupLayout jpPlatoonListLayout = new javax.swing.GroupLayout(jpPlatoonList);
        jpPlatoonList.setLayout(jpPlatoonListLayout);
        jpPlatoonListLayout.setHorizontalGroup(
            jpPlatoonListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jpPlatoonListLayout.setVerticalGroup(
            jpPlatoonListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jpPlatoonEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(labels.getString("BATTLESIM.PLATOON.TITLE"))); // NOI18N

        jLabel6.setText(labels.getString("QTD")); // NOI18N

        jsPlatoonQty.setModel(new javax.swing.SpinnerNumberModel(1000, 0, 1000000, 100));
        jsPlatoonQty.setName("jsPlatoonQty"); // NOI18N

        jLabel7.setText(labels.getString("TREINO")); // NOI18N

        jsPlatoonTraining.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsPlatoonTraining.setName("jsPlatoonTraining"); // NOI18N

        jLabel8.setText(labels.getString("ARMA")); // NOI18N

        jsPlatoonWeapon.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsPlatoonWeapon.setName("jsPlatoonWeapon"); // NOI18N

        jLabel9.setText(labels.getString("ARMADURA")); // NOI18N

        jsPlatoonArmor.setModel(new javax.swing.SpinnerNumberModel(10, 0, 100, 10));
        jsPlatoonArmor.setName("jsPlatoonArmor"); // NOI18N

        jLabel10.setText(labels.getString("TIPO")); // NOI18N

        jbNewPlatoon.setText(bundle.getString("ADDNEW.ARMY")); // NOI18N
        jbNewPlatoon.setToolTipText(bundle.getString("ADDNEW.PLATOON.HINT")); // NOI18N
        jbNewPlatoon.setActionCommand("jbNewPlatoon"); // NOI18N
        jbNewPlatoon.setName("jbNewPlatoon"); // NOI18N

        jbRemPlatoon.setText(bundle.getString("REMOVE.ARMY")); // NOI18N
        jbRemPlatoon.setToolTipText(bundle.getString("REMOVE.PLATOON.HINT")); // NOI18N
        jbRemPlatoon.setActionCommand("jbRemPlatoon");
        jbRemPlatoon.setName("jbRemPlatoon"); // NOI18N

        jbClonePlatoon.setText(bundle.getString("CLONE.ARMY")); // NOI18N
        jbClonePlatoon.setToolTipText(bundle.getString("CLONE.PLATOON.HINT")); // NOI18N
        jbClonePlatoon.setActionCommand("jbClonePlatoon");
        jbClonePlatoon.setName("jbClonePlatoon"); // NOI18N

        jLabel11.setText(labels.getString("LISTAR:")); // NOI18N

        javax.swing.GroupLayout jpPlatoonEditLayout = new javax.swing.GroupLayout(jpPlatoonEdit);
        jpPlatoonEdit.setLayout(jpPlatoonEditLayout);
        jpPlatoonEditLayout.setHorizontalGroup(
            jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPlatoonEditLayout.createSequentialGroup()
                        .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jsPlatoonQty, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPlatoonTroopType, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsPlatoonTraining, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsPlatoonWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jsPlatoonArmor, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPlatoonEditLayout.createSequentialGroup()
                        .addComponent(jbNewPlatoon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbClonePlatoon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemPlatoon))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpPlatoonEditLayout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbTypeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jpPlatoonEditLayout.setVerticalGroup(
            jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPlatoonEditLayout.createSequentialGroup()
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbPlatoonTroopType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jsPlatoonQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jsPlatoonTraining, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jsPlatoonWeapon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jsPlatoonArmor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(cbTypeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpPlatoonEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNewPlatoon)
                    .addComponent(jbClonePlatoon)
                    .addComponent(jbRemPlatoon)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpArmyEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jpCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jpPlatoonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpArmyList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpPlatoonList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpArmyList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpPlatoonList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jpPlatoonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpArmyEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbArmyNation;
    private javax.swing.JComboBox cbArmyTactic;
    private javax.swing.JComboBox cbPlatoonTroopType;
    private javax.swing.JComboBox cbTypeCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jbCloneArmy;
    private javax.swing.JButton jbClonePlatoon;
    private javax.swing.JButton jbNewArmy;
    private javax.swing.JButton jbNewPlatoon;
    private javax.swing.JButton jbRemArmy;
    private javax.swing.JButton jbRemPlatoon;
    private javax.swing.JComboBox jcbTerrain;
    private javax.swing.JLabel jlDefense;
    private javax.swing.JLabel jlFortification;
    private javax.swing.JLabel jlLoyalty;
    private javax.swing.JLabel jlSize;
    private javax.swing.JPanel jpArmyEdit;
    private javax.swing.JPanel jpArmyList;
    private javax.swing.JPanel jpCity;
    private javax.swing.JPanel jpPlatoonEdit;
    private javax.swing.JPanel jpPlatoonList;
    private javax.swing.JSpinner jsArmyAbonus;
    private javax.swing.JSpinner jsArmyCommander;
    private javax.swing.JSpinner jsArmyDbonus;
    private javax.swing.JSpinner jsArmyMorale;
    private javax.swing.JSlider jsCityFortification;
    private javax.swing.JSlider jsCityLoyalty;
    private javax.swing.JSlider jsCitySize;
    private javax.swing.JSpinner jsPlatoonArmor;
    private javax.swing.JSpinner jsPlatoonQty;
    private javax.swing.JSpinner jsPlatoonTraining;
    private javax.swing.JSpinner jsPlatoonWeapon;
    private javax.swing.JTable jtArmyList;
    private javax.swing.JTable jtPlatoonList;
    // End of variables declaration//GEN-END:variables

    private void setLocal(Local local) {
        final String title = String.format(labels.getString("BATTLECAUSUALITYSIM.TITLE"), local.getCoordenadas());
        setTitle(title);
        setCidade(local);
        setArmy(local);
    }

    /**
     * set initial values from city
     *
     * @param local
     */
    private void setCidade(Local local) {
        if (!localFacade.isCidade(local)) {
            return;
        }
        final Cidade city = localFacade.getCidade(local);
        jsCityLoyalty.setValue(cidadeFacade.getLealdade(city));
        jsCitySize.setValue(cidadeFacade.getTamanho(city));
        jsCityFortification.setValue(cidadeFacade.getFortificacao(city));

        jpCity.setBorder(javax.swing.BorderFactory.createTitledBorder(
                String.format("%s: %s", labels.getString("BATTLESIM.CITY.TITLE"),
                        cidadeFacade.getNomeCoordenada(city))));
        updateCityLabels();
    }

    @Override
    public void updateCityLabels() {
        jlLoyalty.setText(String.format("%s: %s",
                labels.getString("LEALDADE"),
                jsCityLoyalty.getValue()));

        jlSize.setText(String.format("%s: %s", labels.getString("TAMANHO"), cidadeFacade.getTamanhoNome(jsCitySize.getValue())));

        jlFortification.setText(String.format("%s: %s", labels.getString("FORTIFICACOES"),
                cidadeFacade.getFortificacaoNome(jsCityFortification.getValue())));

        jlDefense.setText(String.format("%s: %s", labels.getString("CIDADE.DEFESA"),
                cidadeFacade.getDefesa(jsCitySize.getValue(), jsCityFortification.getValue(), jsCityLoyalty.getValue())));
    }

    private void configCitySliders() {
        jsCityLoyalty.addChangeListener(battleSimControler);
        jsCitySize.addChangeListener(battleSimControler);
        jsCityFortification.addChangeListener(battleSimControler);

        Hashtable sizeLabels = new Hashtable();
        for (int ii = jsCitySize.getMinimum(); ii <= jsCitySize.getMaximum(); ii++) {
            sizeLabels.put(ii, new JLabel(cidadeFacade.getTamanhoNome(ii)));
        }
        jsCitySize.setLabelTable(sizeLabels);
        jsCitySize.setPaintLabels(true);

        Hashtable fortLabels = new Hashtable();
        for (int ii = jsCityFortification.getMinimum(); ii <= jsCityFortification.getMaximum(); ii++) {
            fortLabels.put(ii, new JLabel(cidadeFacade.getFortificacaoNome(ii)));
        }
        jsCityFortification.setLabelTable(fortLabels);
        jsCityFortification.setPaintLabels(true);
    }

    private void setArmy(Local local) {
        if (localFacade.getExercitos(local).isEmpty()) {
            return;
        }
        final TableModel model = battleSimControler.getArmyListTableModel(localFacade.getExercitos(local).values());
        this.setArmyModel(model, 0);
    }

    private void configUI(Local local) {

        cbTypeCategory.setActionCommand("comboFiltro");
        cbTypeCategory.setModel(battleSimControler.listFiltroTypes());

        //adiciona listeners
        cbTypeCategory.addActionListener(battleSimControler);

        configCitySliders();
        cbArmyTactic.setActionCommand("cbTactic");
        cbArmyTactic.setModel(battleSimControler.listFiltroTactic());
        cbArmyTactic.addActionListener(battleSimControler);
        cbArmyNation.setActionCommand("cbNation");
        cbArmyNation.setModel(battleSimControler.getNacaoComboModel());
        cbArmyNation.addActionListener(battleSimControler);
        cbPlatoonTroopType.setActionCommand("cbTroopType");
        cbPlatoonTroopType.setModel(platoonControler.listTipoTropas());
        cbPlatoonTroopType.addActionListener(platoonControler);

        jsArmyCommander.addChangeListener(battleSimControler);
        jsArmyMorale.addChangeListener(battleSimControler);
        jsArmyAbonus.addChangeListener(battleSimControler);
        jsArmyDbonus.addChangeListener(battleSimControler);
        jcbTerrain.setActionCommand("jcbTerrain");
        jbNewArmy.addActionListener(battleSimControler);
        jbCloneArmy.addActionListener(battleSimControler);
        jbRemArmy.addActionListener(battleSimControler);
        jbNewPlatoon.addActionListener(platoonControler);
        jbClonePlatoon.addActionListener(platoonControler);
        jbRemPlatoon.addActionListener(platoonControler);

        final GenericoComboBoxModel terrenoComboModel = battleSimControler.getTerrenoComboModel();
        jcbTerrain.setModel(terrenoComboModel);
        final int index = terrenoComboModel.getIndexByDisplay(local.getTerreno().getComboDisplay());
        this.jcbTerrain.setSelectedIndex(index);
        this.jcbTerrain.setMaximumRowCount(terrenoComboModel.getSize());
        jcbTerrain.addActionListener(battleSimControler);

        jtArmyList.setAutoCreateColumnsFromModel(true);
        jtArmyList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jtArmyList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtArmyList.getSelectionModel().addListSelectionListener(battleSimControler);

        jtPlatoonList.setAutoCreateColumnsFromModel(true);
        jtPlatoonList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jtPlatoonList.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtPlatoonList.getSelectionModel().addListSelectionListener(platoonControler);
        //select first army to load titles
        this.jtArmyList.setRowSelectionInterval(0, 0);
    }

    @Override
    public void setCasualtyBorder(ExercitoSim exercito, Terreno terrain) {
        //config border
        final String title;
        if (exercito != null) {
            GenericoComboObject tactic = (GenericoComboObject) cbArmyTactic.getSelectedItem();
            title = String.format(labels.getString("TROOPCASUALTIES.COMMANDER.TACTIC"), exercito.getNome(), terrain.getNome(), tactic.getComboDisplay());
        } else {
            title = labels.getString("TROOPCASUALTIES.BORDER.TITLE");
        }
        jpPlatoonList.setBorder(javax.swing.BorderFactory.createTitledBorder(title));
    }

    @Override
    public final void setArmyModel(TableModel model, int selected) {
        this.jtArmyList.setModel(model);
        doAdjustCols(jtArmyList);
//        this.jtArmyList.getSelectionModel().setSelectionInterval(0, 0);
        try {
            this.jtArmyList.setRowSelectionInterval(selected, selected);
        } catch (IllegalArgumentException ex) {
            this.jtArmyList.setRowSelectionInterval(0, 0);
        }
    }

    public final void setPlatoonModel(TableModel model, int selected) {
        this.jtPlatoonList.setModel(model);
        doAdjustCols(jtPlatoonList);
        try {
            this.jtPlatoonList.getSelectionModel().setSelectionInterval(selected, selected);
        } catch (IllegalArgumentException ex) {
            this.jtPlatoonList.getSelectionModel().setSelectionInterval(0, 0);
        }
//        try {
//            this.jtPlatoonList.setRowSelectionInterval(selected, selected);
//        } catch (IllegalArgumentException ex) {
//            this.jtPlatoonList.setRowSelectionInterval(0, 0);
//        }
    }

    public final String getFiltroTypes() {
        GenericoComboObject elem = (GenericoComboObject) cbTypeCategory.getSelectedItem();
        return elem.getComboId();
    }

    protected void doAdjustCols(JTable jtList) {
        final ColumnWidthsAdjuster cwa = new ColumnWidthsAdjuster();
        cwa.calcColumnWidths(jtList);
    }

    @Override
    public JTable getListaExercitos() {
        return jtArmyList;
    }

    public JTable getListaPlatoon() {
        return jtPlatoonList;
    }

    public GenericoComboObject getTipoTropaPlatoon() {
        return (GenericoComboObject) cbPlatoonTroopType.getSelectedItem();
    }

    public void doRefreshArmy() {
        battleSimControler.doRefreshArmy();
    }

    @Override
    public void updateArmy(ExercitoSim exercito) {
        jsArmyCommander.removeChangeListener(battleSimControler);
        jsArmyCommander.setValue(exercito.getPericiaComandante());
        jsArmyCommander.addChangeListener(battleSimControler);

        jsArmyMorale.removeChangeListener(battleSimControler);
        jsArmyMorale.setValue(exercito.getMoral());
        jsArmyMorale.addChangeListener(battleSimControler);

        jsArmyAbonus.removeChangeListener(battleSimControler);
        jsArmyAbonus.setValue(exercito.getBonusAttack());
        jsArmyAbonus.addChangeListener(battleSimControler);

        jsArmyDbonus.removeChangeListener(battleSimControler);
        jsArmyDbonus.setValue(exercito.getBonusDefense());
        jsArmyDbonus.addChangeListener(battleSimControler);

        cbArmyTactic.removeActionListener(battleSimControler);
        final GenericoComboBoxModel modelTactic = (GenericoComboBoxModel) cbArmyTactic.getModel();
        cbArmyTactic.setSelectedIndex(modelTactic.getIndexById(ConverterFactory.taticaToCodigo(exercito.getTatica())));
        cbArmyTactic.addActionListener(battleSimControler);

        cbArmyNation.removeActionListener(battleSimControler);
        final GenericoComboBoxModel modelNation = (GenericoComboBoxModel) cbArmyNation.getModel();
        cbArmyNation.setSelectedIndex(modelNation.getIndexById(exercito.getNacao().getComboId()));
        cbArmyNation.addActionListener(battleSimControler);
    }

    public void updatePlatoonPanel(Pelotao platoon) {
        jsPlatoonQty.removeChangeListener(platoonControler);
        jsPlatoonQty.setValue(platoon.getQtd());
        jsPlatoonQty.addChangeListener(platoonControler);

        jsPlatoonTraining.removeChangeListener(platoonControler);
        jsPlatoonTraining.setValue(platoon.getTreino());
        jsPlatoonTraining.addChangeListener(platoonControler);

        jsPlatoonWeapon.removeChangeListener(platoonControler);
        jsPlatoonWeapon.setValue(platoon.getModAtaque());
        jsPlatoonWeapon.addChangeListener(platoonControler);

        jsPlatoonArmor.removeChangeListener(platoonControler);
        jsPlatoonArmor.setValue(platoon.getModDefesa());
        jsPlatoonArmor.addChangeListener(platoonControler);

        cbPlatoonTroopType.removeActionListener(platoonControler);
        final GenericoComboBoxModel model = (GenericoComboBoxModel) cbPlatoonTroopType.getModel();
        cbPlatoonTroopType.setSelectedIndex(model.getIndexById(platoon.getTipoTropa().getComboId()));
        cbPlatoonTroopType.addActionListener(platoonControler);
    }
}
